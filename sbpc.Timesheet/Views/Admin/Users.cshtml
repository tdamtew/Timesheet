@model IEnumerable<sbpc.Timesheet.Models.AccountViewModels.UserViewModel>

@{
    ViewData["Title"] = "Employees";
    Layout = "/Views/Shared/_Layout.cshtml";
}
<div class="modal fade" id="confirmModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title">Confirm</h2>
            </div>
            <div class="modal-body">
                <div>
                    Are you sure you want to delete employee <strong id="userId"></strong> ?
                    The operation is irreversible and the employee will no longer be able to use the system.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="confirmButton">Continue</button>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">
            @ViewData["Title"] <br/>
            <small>Employees registered to use the timesheet system.</small>
        </h1>
    </div>
</div>
<div class="row">
    <div class="col-md-8">
        @Html.AntiForgeryToken()
        @if (Model == null || !Model.Any())
            {
            <p class="alert alert-warning text-center">There are no employees registered. Please click on <strong>Add Employee</strong> to add new employees.</p>
        }
        else
        {
            <table class="table table-hover" id="usersTable">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LastName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PhoneNumber)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "EditUser", new { userId = item.Email }, new { @class = "btn btn default" }) |
                                <button type="button" data-user="@item.Email" class="deleteUser btn btn-default">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        }
    </div>
</div>

@section scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {

            $("#usersTable").DataTable();
            $(".deleteUser").on("click", function () {
                $("#userId").html($(this).data("user"));
                $("#confirmModal").modal("show");
            });

            $("#confirmButton").on("click", function () {
                     $.ajax({
                        type: "post",
                        url: '@Url.Action("DeleteUser", "Admin")',
                        data: {
                            userId : $("#userId").html(),
                            __RequestVerificationToken : $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (data, textStatus, xhr) {
                            $("#confirmModal").modal("hide");
                            $.notify("Employee has been removed successfully!", "success");
                        },
                        error: function (jqXhr, textStatus, errorThrown) {
                            $("#confirmModal").modal("hide");
                            $.notify(jqXhr.status == 400 ? "System was unable to find the employee to remove." : "Error occurred while removing the employee. Please try again later.", "error");
                        }
                    });
            });

            $("#continueButton").on("click", function () {
                window.location.href = '@Url.Action("Users", "Admin")';
            });
        });
    </script>
}
