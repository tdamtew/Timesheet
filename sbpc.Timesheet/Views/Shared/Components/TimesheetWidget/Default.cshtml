@model sbpc.Timesheet.Models.TimesheetViewModel
@using sbpc.Timesheet.Helpers
@using System.Globalization
@{
    var startOfWeek = Model.date.AddDays((int)CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek - (int)Model.date.DayOfWeek);
    var endOfWeek = startOfWeek.AddDays(6);
    var startOfMonth = new DateTime(Model.date.Year, Model.date.Month, 1);
    var endOfMonth = startOfMonth.AddMonths(1).AddDays(-1);
    var dailyExpense = Model.Expenses == null ? 0 : Model.Expenses.Where(x => x.Date.Date == Model.date.Date).Sum(x => x.Amount);
    var dailyMileageCost = Model.Mileages == null ? 0 : Model.Mileages.Where(x => x.Date == Model.date.Date).Sum(x => x.CalculatedCost);
    var weeklyExpense = Model.Expenses == null ? 0 : Model.Expenses.Where(a => a.Date.Date >= startOfWeek.Date && a.Date.Date <= endOfWeek.Date).Sum(x => x.Amount);
    var weeklyMileageCost = Model.Mileages == null ? 0 : Model.Mileages.Where(a => a.Date.Date >= startOfWeek.Date && a.Date.Date <= endOfWeek.Date).Sum(x => x.CalculatedCost);
    var weeklyReimbursable = Model.Expenses == null ? 0 : Model.Expenses.Where(a => a.Method == Constants.Method.Personal && a.Date.Date >= startOfWeek.Date && a.Date.Date <= endOfWeek.Date).Sum(x => x.Amount);
    var monthlyExpense = Model.Expenses == null ? 0 : Model.Expenses.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).Sum(x => x.Amount);
    var monthlyMileageCost = Model.Mileages == null ? 0 : Model.Mileages.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).Sum(x => x.CalculatedCost);
    var monthlyReimbursable = Model.Expenses == null ? 0 : Model.Expenses.Where(a => a.Method == Constants.Method.Personal && a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).Sum(x => x.Amount);
}
<div class="row">
    <div class="col-md-3">
        <div class="panel panel-red">
            <div class="panel-heading">
                <i class="fa fa-calendar fa-fw"></i><strong> Summary</strong>
            </div>
            <div class="panel-body">
                <!--date picker-->
                <div class="form-group">
                    <label class="control-label"><strong>Choose a Date:</strong></label>
                    <input type="text" class="form-control" asp-for="@Model.date" value="@Model.date.ToString("MM/dd/yyyy")" id="summaryDate" readonly="readonly" />
                </div>
                <!--daily total-->
                <div class="panel panel-green">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <strong style="font-size:13pt;">@Model.date.ToString("MM/dd/yyyy")</strong>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body" style="padding-top: 0px; padding-bottom: 0px;">
                        <div class="row">
                            <ul class="list-group">
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Hours
                                    <span class="badge badge-pill alert-success">@(Model.Hours == null ? "0" : Model.Hours.Where(x => x.Date.Date == Model.date.Date).Sum(x => x.Hours).ToString())</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Expenses
                                    <span class="badge badge-pill alert-success">@((dailyExpense + dailyMileageCost).ToString("C"))</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <!-- weekly total-->
                <div class="panel panel-green">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <strong style="font-size:13pt;">Week of @startOfWeek.ToString("MM/dd/yyyy")</strong>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body" style="padding-top: 0px; padding-bottom: 0px;">
                        <div class="row">
                            <ul class="list-group">
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Total hours
                                    <span class="badge badge-pill alert-success">
                                        @(Model.Hours == null ? "0" : Model.Hours.Where(a => a.Date.Date >= startOfWeek.Date && a.Date.Date <= endOfWeek.Date).Sum(x => x.Hours).ToString())
                                    </span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Travel hours
                                    <span class="badge badge-pill alert-success">@(Model.Hours == null ? "0" : Model.Hours.Where(a => a.IsTravel && a.Date.Date >= startOfWeek.Date && a.Date.Date <= endOfWeek.Date).Sum(x => x.Hours).ToString())</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Expenses (Reimbursable)
                                    <span class="badge badge-pill alert-success">
                                        @($"{ (weeklyExpense + weeklyMileageCost).ToString("C")} ({ (weeklyReimbursable + weeklyMileageCost).ToString("C")})")
                                    </span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Mileage
                                    <span class="badge badge-pill alert-success">@(Model.Mileages == null ? "0" : Model.Mileages.Where(a => a.Date.Date >= startOfWeek.Date && a.Date.Date <= endOfWeek.Date).Sum(x => x.mile).ToString())</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <!-- monthly total-->
                <div class="panel panel-green">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <strong style="font-size:13pt;">@Model.date.ToString("Y")</strong>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body" style="padding-top: 0px; padding-bottom: 0px;">
                        <div class="row">
                            <ul class="list-group">
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    SBP Hours (Overtime)
                                    <span class="badge badge-pill alert-success">
                                        @(Model.Hours == null ? "0 (0)" : $"{Model.Hours.Where(a => !a.Billable && a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).Sum(x => x.Hours).ToString()} ({Model.Hours.Where(a => !a.Billable && a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).Sum(x => x.OTHours).ToString()})")
                                    </span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Billable Hours (Overtime)
                                    <span class="badge badge-pill alert-success">@(Model.Hours == null ? "0 (0)" : $"{Model.Hours.Where(a => a.Billable && a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).Sum(x => x.Hours).ToString()} ({Model.Hours.Where(a => a.Billable && a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).Sum(x => x.OTHours).ToString()})")</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Expenses (Reimbursable)
                                    <span class="badge badge-pill alert-success">@($"{(monthlyExpense + monthlyMileageCost).ToString("C")} ({(monthlyMileageCost + monthlyReimbursable).ToString("C")})")</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Mileage
                                    <span class="badge badge-pill alert-success">@(Model.Mileages == null ? "0" : Model.Mileages.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).Sum(x => x.mile).ToString())</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <div class="panel panel-default" style="min-height:781px;">
            <div class="panel-heading">
                <ul class="nav nav-tabs">
                    <li class="nav-item active">
                        <a class="nav-link" id="hour-tab" data-toggle="tab" href="#hour" role="tab" aria-controls="home" aria-selected="true">Hours</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="expense-tab" data-toggle="tab" href="#expense" role="tab" aria-controls="profile" aria-selected="false">Expense</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="mileage-tab" data-toggle="tab" href="#mileage" role="tab" aria-controls="contact" aria-selected="false">Mileage</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="policy-tab" data-toggle="tab" href="#policy" role="tab" aria-controls="contact" aria-selected="false">Policy</a>
                    </li>

                </ul>
            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <!--Hours tab content-->
                    <div class="tab-pane active" id="hour" role="tabpanel" aria-labelledby="hour-tab">
                        <div class="row">
                            <div class="col-md-9">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">
                                        <i class="fa fa-hourglass fa-fw"></i><strong> Hours for the selected month</strong>
                                    </div>
                                    <div class="panel-body">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Date</th>
                                                    <th>
                                                        Job
                                                    </th>
                                                    <th>
                                                        Total hours (Overtime)
                                                    </th>
                                                    <th>
                                                        Travel?
                                                    </th>
                                                    <th>Note</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            @if (Model.Hours != null && Model.Hours.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date) != null)
                                            {
                                                <tbody>
                                                    @foreach (var item in Model.Hours.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).OrderByDescending(x => x.Date))
                                                    {
                                                        <tr>
                                                            <td>@item.Date.ToString("MM/dd/yyyy")</td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.JobName)
                                                            </td>
                                                            <td>
                                                                @($"{item.Hours} ({item.OTHours})")
                                                            </td>
                                                            <td>
                                                                @(item.IsTravel ? "Yes" : "No")
                                                            </td>
                                                            <td>
                                                                @if (!string.IsNullOrEmpty(item.Note))
                                                                {
                                                                    <button class="btn btn-info" data-toggle="tooltip" data-placement="left" title="@item.Note">
                                                                        @(item.Note.Length > 10 ? item.Note.Substring(0, 7) + "..." : item.Note)
                                                                    </button>
                                                                }
                                                            </td>
                                                            <td>
                                                                <a href="#" data-hour="@item.Id" class="edit-hour">Edit</a> |
                                                                <a href="#" data-hour="@item.Id" data-date="@Model.date" class="delete-hour">Delete</a>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            }
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3" id="HourWidget">
                                @await Component.InvokeAsync("HourWidget", new { date = Model.date, hourId = 0 })
                            </div>
                        </div>
                    </div>

                    <!--expense tab-->
                    <div class="tab-pane fade" id="expense" role="tabpanel" aria-labelledby="expense-tab">
                        <div class="row">
                            <div class="col-md-9">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">
                                        <i class="fa fa-money fa-fw"></i><strong> Expenses for the selected month</strong>
                                    </div>
                                    <div class="panel-body">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Date</th>
                                                    <th>
                                                        Job
                                                    </th>
                                                    <th>
                                                        Cost
                                                    </th>
                                                    <th>
                                                        Category
                                                    </th>
                                                    <th>
                                                        Method
                                                    </th>
                                                    <th>Note</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            @if (Model.Expenses != null && Model.Expenses.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date) != null)
                                            {
                                                <tbody>
                                                    @foreach (var item in Model.Expenses.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).OrderByDescending(x => x.Date))
                                                    {
                                                        <tr>
                                                            <td>@item.Date.ToString("MM/dd/yyyy")</td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.JobName)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Amount)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Category)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Method)
                                                            </td>
                                                            <td>
                                                                @if (!string.IsNullOrEmpty(item.Note))
                                                                {
                                                                    <button class="btn btn-info" data-toggle="tooltip" data-placement="left" title="@item.Note">
                                                                        @(item.Note.Length > 10 ? item.Note.Substring(0, 7) + "..." : item.Note)
                                                                    </button>
                                                                }
                                                            </td>
                                                            <td>
                                                                <a href="#" data-expense="@item.Id" class="edit-expense">Edit</a> |
                                                                <a href="#" data-expense="@item.Id" data-date="@Model.date" class="delete-expense">Delete</a>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            }
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3" id="ExpenseWidget">
                                @await Component.InvokeAsync("ExpenseWidget", new { date = Model.date, expenseId = 0 })
                            </div>
                        </div>
                    </div>

                    <!--mileage tab-->
                    <div class="tab-pane fade" id="mileage" role="tabpanel" aria-labelledby="mileage-tab">
                        <div class="row">
                            <div class="col-md-9">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">
                                        <i class="fa fa-cc-discover fa-fw"></i><strong> mileage for the selected month</strong>
                                    </div>
                                    <div class="panel-body">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Date</th>
                                                    <th>
                                                        Job
                                                    </th>
                                                    <th>
                                                        Mileage
                                                    </th>
                                                    <th>
                                                        Note
                                                    </th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            @if (Model.Mileages != null && Model.Mileages.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date) != null)
                                            {
                                                <tbody>
                                                    @foreach (var item in Model.Mileages.Where(a => a.Date.Date >= startOfMonth.Date && a.Date.Date <= endOfMonth.Date).OrderByDescending(x => x.Date))
                                                    {
                                                        <tr>
                                                            <td>@item.Date.ToString("MM/dd/yyyy")</td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.JobName)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.mile)
                                                            </td>
                                                            <td>
                                                                @if (!string.IsNullOrEmpty(item.Note))
                                                                {
                                                                    <button class="btn btn-info" data-toggle="tooltip" data-placement="left" title="@item.Note">
                                                                        @(item.Note.Length > 10 ? item.Note.Substring(0, 7) + "..." : item.Note)
                                                                    </button>
                                                                }
                                                            </td>
                                                            <td>
                                                                <a href="#" data-mileage="@item.Id" class="edit-mileage">Edit</a> |
                                                                <a href="#" data-mileage="@item.Id" data-date="@Model.date" class="delete-mileage">Delete</a>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            }
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3" id="MileageWidget">
                                @await Component.InvokeAsync("MileageWidget", new { date = Model.date, mileageId = 0 })
                            </div>
                        </div>
                    </div>

                    <!--policy tab-->
                    <div class="tab-pane fade" id="policy" role="tabpanel" aria-labelledby="policy-tab">
                        <div class="row" style="padding: 10px;">
                            <h3>SBP Timesheet Policy</h3>
                            <br />
                            <p>Please follow the below instructions carefully and thoroughly.</p>
                            <br />
                            <ol>
                                <li>
                                    You are responsible for entering any expense associated with you, no matter who paid for it.  If somebody else paid for it, you need to make sure it's in the timesheet under your name.
                                </li>
                                <li>
                                    At the end of a project, whoever is the lead should go through the time and expenses for each person that worked on the project and make sure everything is in there.
                                </li>
                            </ol>
                            <p>Examples are as follows:</p>
                            <ol>
                                <li>
                                    Flights
                                    <ol>
                                        <li>
                                            Put each person’s flight cost on their own timesheet, not all on one persons.  If the bill lumps it all together, split the cost among everyone.
                                        </li>
                                        <li>
                                            Enter the expense on the day you fly
                                        </li>
                                        <li>
                                            In the notes, put the from, to, and airports ex. BWI to MDW
                                        </li>
                                    </ol>
                                </li>
                                <li>
                                    Hotels
                                    <ol>
                                        <li>
                                            Put each person’s hotel on their own timesheet, not all on one person’s
                                        </li>
                                        <li>
                                            Enter the expense on the day you checkout
                                        </li>
                                        <li>
                                            In the notes, put check in date to check out date ex. 10/29-11/3
                                        </li>
                                    </ol>
                                </li>
                                <li>
                                    Group Meals
                                    <ol>
                                        <li>
                                            Whoever has the receipt puts in on their timesheet
                                        </li>
                                        <li>
                                            In the notes, put how many people you paid for ex. 3 people
                                        </li>
                                    </ol>
                                </li>
                                <li>
                                    Rental Car
                                    <ol>
                                        <li>
                                            Whoever returns the car and gets the receipt should enter the expense
                                        </li>
                                        <li>
                                            Enter the expense on the day your return the car
                                        </li>
                                        <li>
                                            In the notes, put the dates of the rental ex. 10/29-11/3
                                        </li>
                                    </ol>
                                </li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
